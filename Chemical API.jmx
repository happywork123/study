<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Study API" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1477900920000</longProp>
        <longProp name="ThreadGroup.end_time">1477900920000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="workspace" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="workspace" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="workspace" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="add workspace" enabled="false"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="add workspace" enabled="true"/>
                <hashTree/>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/human_approval验证fda" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/human_approval验证fda" enabled="true"/>
                  <hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/human_approval验证fda" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">10</stringProp>
                    </LoopController>
                    <hashTree>
                      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                        <stringProp name="delimiter">\t</stringProp>
                        <stringProp name="fileEncoding">utf-8</stringProp>
                        <stringProp name="filename">statistic_fda.csv</stringProp>
                        <boolProp name="quotedData">false</boolProp>
                        <boolProp name="recycle">true</boolProp>
                        <stringProp name="shareMode">shareMode.all</stringProp>
                        <boolProp name="stopThread">false</boolProp>
                        <stringProp name="variableNames">inchi_key,res</stringProp>
                      </CSVDataSet>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/human_approval验证fda--${res}" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                        <stringProp name="HTTPSampler.port">8081</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">300</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;human_approval&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;fda&quot;);
      } else {
        assertion += separator + item.get(&quot;fda&quot;);
      }

vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                        <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySamplerProperties">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugPostProcessor>
                        <hashTree/>
                        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                          <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                          <stringProp name="BeanShellAssertion.filename"></stringProp>
                          <stringProp name="BeanShellAssertion.parameters"></stringProp>
                          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                        </BeanShellAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/human_approval验证ema" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/human_approval验证ema" enabled="true"/>
                  <hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/human_approval验证ema" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">10</stringProp>
                    </LoopController>
                    <hashTree>
                      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                        <stringProp name="delimiter">\t</stringProp>
                        <stringProp name="fileEncoding">utf-8</stringProp>
                        <stringProp name="filename">statistic_ema.csv</stringProp>
                        <boolProp name="quotedData">false</boolProp>
                        <boolProp name="recycle">true</boolProp>
                        <stringProp name="shareMode">shareMode.all</stringProp>
                        <boolProp name="stopThread">false</boolProp>
                        <stringProp name="variableNames">inchi_key,res</stringProp>
                      </CSVDataSet>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/human_approval验证ema--${res}" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                        <stringProp name="HTTPSampler.port">8081</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">300</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;human_approval&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;ema&quot;);
      } else {
        assertion += separator + item.get(&quot;ema&quot;);
      }

vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                        <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySamplerProperties">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugPostProcessor>
                        <hashTree/>
                        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                          <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                          <stringProp name="BeanShellAssertion.filename"></stringProp>
                          <stringProp name="BeanShellAssertion.parameters"></stringProp>
                          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                        </BeanShellAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/human_approval验证cfda" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/human_approval验证cfda" enabled="true"/>
                  <hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/human_approval验证cfda" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">10</stringProp>
                    </LoopController>
                    <hashTree>
                      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                        <stringProp name="delimiter">\t</stringProp>
                        <stringProp name="fileEncoding">utf-8</stringProp>
                        <stringProp name="filename">statistic_cfda.csv</stringProp>
                        <boolProp name="quotedData">false</boolProp>
                        <boolProp name="recycle">true</boolProp>
                        <stringProp name="shareMode">shareMode.all</stringProp>
                        <boolProp name="stopThread">false</boolProp>
                        <stringProp name="variableNames">inchi_key,res</stringProp>
                      </CSVDataSet>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/human_approval验证cfda--${res}" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                        <stringProp name="HTTPSampler.port">8081</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">300</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;human_approval&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;cfda&quot;);
      } else {
        assertion += separator + item.get(&quot;cfda&quot;);
      }

vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                        <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySamplerProperties">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugPostProcessor>
                        <hashTree/>
                        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                          <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                          <stringProp name="BeanShellAssertion.filename"></stringProp>
                          <stringProp name="BeanShellAssertion.parameters"></stringProp>
                          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                        </BeanShellAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/source" enabled="false"/>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/source验证food&amp;odor" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/source验证food&amp;odor" enabled="true"/>
                  <hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/source验证food&amp;odor" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">5</stringProp>
                    </LoopController>
                    <hashTree>
                      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                        <stringProp name="delimiter">\t</stringProp>
                        <stringProp name="fileEncoding">utf-8</stringProp>
                        <stringProp name="filename">statistic_source.csv</stringProp>
                        <boolProp name="quotedData">false</boolProp>
                        <boolProp name="recycle">true</boolProp>
                        <stringProp name="shareMode">shareMode.all</stringProp>
                        <boolProp name="stopThread">false</boolProp>
                        <stringProp name="variableNames">inchi_key,res</stringProp>
                      </CSVDataSet>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/source验证food&amp;odor--${res}" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                        <stringProp name="HTTPSampler.port">8081</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">300</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;source&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;food&quot;);
      } else {
        assertion += separator + item.get(&quot;food&quot;);
      }

       if (assertion.length() == 0) {
        assertion += item.get(&quot;odor&quot;);
      } else {
        assertion += separator + item.get(&quot;odor&quot;);
      }

vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                        <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySamplerProperties">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugPostProcessor>
                        <hashTree/>
                        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                          <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                          <stringProp name="BeanShellAssertion.filename"></stringProp>
                          <stringProp name="BeanShellAssertion.parameters"></stringProp>
                          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                        </BeanShellAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/source验证food" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/source验证food" enabled="true"/>
                  <hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/source验证food" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">10</stringProp>
                    </LoopController>
                    <hashTree>
                      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                        <stringProp name="delimiter">\t</stringProp>
                        <stringProp name="fileEncoding">utf-8</stringProp>
                        <stringProp name="filename">statistic_food.csv</stringProp>
                        <boolProp name="quotedData">false</boolProp>
                        <boolProp name="recycle">true</boolProp>
                        <stringProp name="shareMode">shareMode.all</stringProp>
                        <boolProp name="stopThread">false</boolProp>
                        <stringProp name="variableNames">inchi_key,res</stringProp>
                      </CSVDataSet>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/source验证food--${res}" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                        <stringProp name="HTTPSampler.port">8081</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">300</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;source&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;food&quot;);
      } else {
        assertion += separator + item.get(&quot;food&quot;);
      }

vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                        <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySamplerProperties">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugPostProcessor>
                        <hashTree/>
                        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                          <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                          <stringProp name="BeanShellAssertion.filename"></stringProp>
                          <stringProp name="BeanShellAssertion.parameters"></stringProp>
                          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                        </BeanShellAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/source验证odor" enabled="true"/>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/source验证odor" enabled="true"/>
                  <hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/source验证odor" enabled="true">
                      <boolProp name="LoopController.continue_forever">true</boolProp>
                      <stringProp name="LoopController.loops">10</stringProp>
                    </LoopController>
                    <hashTree>
                      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                        <stringProp name="delimiter">\t</stringProp>
                        <stringProp name="fileEncoding">utf-8</stringProp>
                        <stringProp name="filename">statistic_odor.csv</stringProp>
                        <boolProp name="quotedData">false</boolProp>
                        <boolProp name="recycle">true</boolProp>
                        <stringProp name="shareMode">shareMode.all</stringProp>
                        <boolProp name="stopThread">false</boolProp>
                        <stringProp name="variableNames">inchi_key,res</stringProp>
                      </CSVDataSet>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/source验证odor--${res}" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                        <stringProp name="HTTPSampler.port">8081</stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">300</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">2</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;source&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;odor&quot;);
      } else {
        assertion += separator + item.get(&quot;odor&quot;);
      }

vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                        <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySamplerProperties">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugPostProcessor>
                        <hashTree/>
                        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                          <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                          <stringProp name="BeanShellAssertion.filename"></stringProp>
                          <stringProp name="BeanShellAssertion.parameters"></stringProp>
                          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                        </BeanShellAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/clinical_trial" enabled="false"/>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/source验证clinical_trial" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">10</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="delimiter">\t</stringProp>
                    <stringProp name="fileEncoding">utf-8</stringProp>
                    <stringProp name="filename">statistic_clinical_trial.csv</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <stringProp name="shareMode">shareMode.all</stringProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="variableNames">inchi_key,res</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/source验证clinical_trial--${res}" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                    <stringProp name="HTTPSampler.port">8081</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">300</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <stringProp name="filename"></stringProp>
                      <stringProp name="parameters"></stringProp>
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

//JSONObject item = results.getJSONObject(&quot;source&quot;);

  	
     if (assertion.length() == 0) {
        assertion += results.get(&quot;clinical_trial&quot;);
      } else {
        assertion += separator + results.get(&quot;clinical_trial&quot;);
      }

vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySamplerProperties">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugPostProcessor>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="statistic/reaction" enabled="false"/>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="statistic/source验证reaction" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">10</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="delimiter">\t</stringProp>
                    <stringProp name="fileEncoding">utf-8</stringProp>
                    <stringProp name="filename">statistic_reaction.csv</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <stringProp name="shareMode">shareMode.all</stringProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="variableNames">inchi_key,res</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="statistic/source验证reaction--${res}" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">192.168.2.45</stringProp>
                    <stringProp name="HTTPSampler.port">8081</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/chemical-data-api/statistic/inchi_key/${inchi_key}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">300</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <stringProp name="filename"></stringProp>
                      <stringProp name="parameters"></stringProp>
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

//JSONObject item = results.getJSONObject(&quot;source&quot;);

  	
     if (assertion.length() == 0) {
        assertion += results.get(&quot;reaction&quot;);
      } else {
        assertion += separator + results.get(&quot;reaction&quot;);
      }


vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySamplerProperties">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugPostProcessor>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                      <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="add workspace" enabled="true"/>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="add workspace" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">1</stringProp>
                </LoopController>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">space_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;space_id&quot; : &quot;(.+)&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">ERROR</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">uid</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;user_id&quot; : &quot;(.+)&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">ERROR</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add workspace" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;space_name&quot;: 7899,&#xd;
    &quot;space_desc&quot;: 234,&#xd;
    &quot;user_id&quot;: &quot;ccd84d23cf034714bc5088e93f9823d3&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">s-analytics-qa.patsnap.local</stringProp>
                    <stringProp name="HTTPSampler.port">8082</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/workspace/1.0/create_space?return_detail=true</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">300</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                      <stringProp name="filename"></stringProp>
                      <stringProp name="parameters"></stringProp>
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;human_approval&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;fda&quot;);
      } else {
        assertion += separator + item.get(&quot;fda&quot;);
      }

       if (assertion.length() == 0) {
        assertion += item.get(&quot;ema&quot;);
      } else {
        assertion += separator + item.get(&quot;ema&quot;);
      }

      if (assertion.length() == 0) {
        assertion += item.get(&quot;cfda&quot;);
      } else {
        assertion += separator + item.get(&quot;cfda&quot;);
      }
vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
                      <boolProp name="displayJMeterProperties">false</boolProp>
                      <boolProp name="displayJMeterVariables">true</boolProp>
                      <boolProp name="displaySamplerProperties">true</boolProp>
                      <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugPostProcessor>
                    <hashTree/>
                    <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
                      <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                      <stringProp name="BeanShellAssertion.filename"></stringProp>
                      <stringProp name="BeanShellAssertion.parameters"></stringProp>
                      <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                    </BeanShellAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="delete workspace" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                  <stringProp name="delimiter">\t</stringProp>
                  <stringProp name="fileEncoding">utf-8</stringProp>
                  <stringProp name="filename">delete_workspace.csv</stringProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="variableNames">uid,boolean</stringProp>
                </CSVDataSet>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete workspace" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">s-analytics-qa.patsnap.local</stringProp>
                  <stringProp name="HTTPSampler.port">8082</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/workspace/1.0/user/${uid}/space/${space_id}/delete_space?return_detail=${boolean}</stringProp>
                  <stringProp name="HTTPSampler.method">DELETE</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">300</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">import org.json.*;

String response_str = prev.getResponseDataAsString();

JSONObject response = new JSONObject(response_str);
JSONObject results = response.getJSONObject(&quot;results&quot;);

String assertion = &quot;&quot;;

String separator = &quot;****&quot;;

JSONObject item = results.getJSONObject(&quot;human_approval&quot;);

  	
     if (assertion.length() == 0) {
        assertion += item.get(&quot;fda&quot;);
      } else {
        assertion += separator + item.get(&quot;fda&quot;);
      }

       if (assertion.length() == 0) {
        assertion += item.get(&quot;ema&quot;);
      } else {
        assertion += separator + item.get(&quot;ema&quot;);
      }

      if (assertion.length() == 0) {
        assertion += item.get(&quot;cfda&quot;);
      } else {
        assertion += separator + item.get(&quot;cfda&quot;);
      }
vars.put(&quot;assertion&quot;, assertion);

</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                  <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
                    <boolProp name="displayJMeterProperties">false</boolProp>
                    <boolProp name="displayJMeterVariables">true</boolProp>
                    <boolProp name="displaySamplerProperties">true</boolProp>
                    <boolProp name="displaySystemProperties">false</boolProp>
                  </DebugPostProcessor>
                  <hashTree/>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
                    <stringProp name="BeanShellAssertion.query">String assertion = vars.get(&quot;assertion&quot;);
String res = &quot;${res}&quot;;

if (!assertion.equals(res)) {
  Failure = true;
  FailureMessage = assertion;
}
</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters"></stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
